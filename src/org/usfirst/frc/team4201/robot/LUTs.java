package org.usfirst.frc.team4201.robot;

public class LUTs {
	/**	This is a table for the wrist limits based on the Arm's current angle.
	 	Array index 0 starts when Arm Angle is -40 (From the horizon)
	 	Formula for how we calculated the limits is:
	 	(int)Math.ceil(Math.acos((maxHorizontalLength-armLength*sin(getArmAngle()))/intakeLength);	// We round up to the nearest whole angle to be safe
	 	Where:
	 	maxHorziontalLength = 42;	// Length from the front of the elevator to the forward extension limit, in inches
	 	armLength = 41;				
	 	intakeLength = 16.5;
	*/
	public static double wristLimits[] = {
		14.2  , 
		25.26 ,
		31.9  ,
		36.77 ,
		40.79 ,
		44.28 ,
		47.4  ,
		50.23 ,
		52.84 ,
		55.26 ,
		57.53 ,
		59.66 ,
		61.67 ,
		63.57 ,
		65.37 ,
		67.09 ,
		68.72 ,
		70.27 ,
		71.75 ,
		73.16 ,
		74.51 ,
		75.79 ,
		77.01 ,
		78.17 ,
		79.28 ,
		80.33 ,
		81.33 ,
		82.27 ,
		83.16 ,
		84.35 ,
		87.44 ,
		90.17 ,
		92.61 ,
		94.8  ,
		96.76 ,
		98.51 ,
		100.08,
		101.47,
		102.69,
		103.76,
		104.67,
		105.44,
		106.06,
		106.54,
		106.89,
		107.09,
		107.16,
		107.09,
		106.89,
		106.54,
		106.06,
		105.44,
		104.67,
		103.76,
		102.69,
		101.47,
		100.08,
		98.51 ,
		96.76 ,
		94.8  ,
		92.61 ,
		90.17 ,
		87.44 ,
		84.35 ,
		83.16 ,
		82.27 ,
		81.33 ,
		80.33 ,
		79.28 ,
		78.17 ,
		77.01 ,
		75.79 ,
		74.51 ,
		73.16 ,
		71.75 ,
		70.27 ,
		68.72 ,
		67.09 ,
		65.37 ,
		63.57 ,
		61.67 ,
		59.66 ,
		57.53 ,
		55.26 ,
		52.84 ,
		50.23 ,
		47.4  ,
		44.28 ,
		40.79 ,
		36.77 ,
		31.9  ,
		25.26
	};
	
	/**	This is a table for the arm angle based off of its voltage.
		Since the DART actuator's linear position does not necessarily linearly correlate with the arm's angle, we use a LUT to determine the angle.
		The formula that calculates these angles is y = 1.21141*x^3-9.29887*x^2+47.7672-84.6061.
		The array uses x = index / 0.02 for a range of 0-5v with <1 degree between each point
		This formula was found by recording a set of angles the arm was at (using a digital level) and the potentiometer voltage at those given angles.
		Alternatively, a linear approximation can work, but it will be +/- 3 degrees off at certain points
		The linear formula would be y = 28.6802*x-76.3477
	*/
	public static double armAngle[] = {
			-65.24,
			-64.46,
			-63.69,
			-62.92,
			-62.16,
			-61.41,
			-60.66,
			-59.92,
			-59.18,
			-58.44,
			-57.72,
			-56.99,
			-56.28,
			-55.56,
			-54.86,
			-54.15,
			-53.46,
			-52.77,
			-52.08,
			-51.39,
			-50.72,
			-50.04,
			-49.37,
			-48.71,
			-48.05,
			-47.39,
			-46.74,
			-46.10,
			-45.45,
			-44.81,
			-44.18,
			-43.55,
			-42.92,
			-42.30,
			-41.68,
			-41.07,
			-40.46,
			-39.85,
			-39.25,
			-38.65,
			-38.05,
			-37.46,
			-36.87,
			-36.29,
			-35.70,
			-35.13,
			-34.55,
			-33.98,
			-33.41,
			-32.84,
			-32.28,
			-31.72,
			-31.16,
			-30.61,
			-30.06,
			-29.51,
			-28.96,
			-28.42,
			-27.88,
			-27.34,
			-26.80,
			-26.27,
			-25.74,
			-25.21,
			-24.68,
			-24.16,
			-23.64,
			-23.12,
			-22.60,
			-22.08,
			-21.57,
			-21.06,
			-20.54,
			-20.04,
			-19.53,
			-19.02,
			-18.52,
			-18.02,
			-17.52,
			-17.02,
			-16.52,
			-16.02,
			-15.53,
			-15.03,
			-14.54,
			-14.05,
			-13.56,
			-13.07,
			-12.58,
			-12.09,
			-11.60,
			-11.12,
			-10.63,
			-10.14,
			-9.66,
			-9.18,
			-8.69,
			-8.21,
			-7.73,
			-7.24,
			-6.76,
			-6.28,
			-5.80,
			-5.31,
			-4.83,
			-4.35,
			-3.87,
			-3.39,
			-2.90,
			-2.42,
			-1.94,
			-1.45,
			-0.97,
			-0.49,
			0.00,
			0.48,
			0.97,
			1.46,
			1.94,
			2.43,
			2.92,
			3.41,
			3.90,
			4.39,
			4.89,
			5.38,
			5.88,
			6.37,
			6.87,
			7.37,
			7.87,
			8.37,
			8.88,
			9.38,
			9.89,
			10.40,
			10.91,
			11.42,
			11.93,
			12.45,
			12.97,
			13.49,
			14.01,
			14.53,
			15.06,
			15.59,
			16.12,
			16.65,
			17.19,
			17.73,
			18.27,
			18.81,
			19.36,
			19.90,
			20.46,
			21.01,
			21.57,
			22.13,
			22.69,
			23.26,
			23.82,
			24.40,
			24.97,
			25.55,
			26.13,
			26.72,
			27.31,
			27.90,
			28.49,
			29.09,
			29.70,
			30.30,
			30.91,
			31.53,
			32.14,
			32.77,
			33.39,
			34.02,
			34.66,
			35.29,
			35.94,
			36.58,
			37.23,
			37.89,
			38.55,
			39.21,
			39.88,
			40.55,
			41.23,
			41.92,
			42.60,
			43.29,
			43.99,
			44.69,
			45.40,
			46.11,
			46.83,
			47.55,
			48.28,
			49.01,
			49.75,
			50.49,
			51.24,
			51.99,
			52.75,
			53.52,
			54.29,
			55.07,
			55.85,
			56.64,
			57.43,
			58.23,
			59.04,
			59.85,
			60.67,
			61.49,
			62.32,
			63.16,
			64.00,
			64.85,
			65.70,
			66.57,
			67.44,
			68.31,
			69.19,
			70.08,
			70.98,
			71.88,
			72.79,
			73.70,
			74.63,
			75.56,
			76.49,
			77.44,
			78.39,
			79.35,
			80.31,
			81.29,
			82.27,
			83.25,
			84.25,
			85.25,
			86.26,
			87.28,
			88.31,
			89.34,
			90.38,
			91.43,
			92.49,
			93.56,
			94.63
	};
}
